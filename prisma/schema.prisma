generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum cardType {
  credit
  debit
  both
}

model cards {
  id             Int      @id @default(autoincrement())
  userId         Int
  cardTitle      String
  cardNumber     String
  securityCode   String
  expirationDate String
  password       String
  isVirtual      Boolean
  type           cardType
  createdAt      DateTime @default(now()) @db.Timestamp(6)
  users          users    @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model credentials {
  id              Int      @id @default(autoincrement())
  userId          Int
  url             String
  credentialTitle String
  username        String
  password        String
  createdAt       DateTime @default(now()) @db.Timestamp(6)
  users           users    @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model safeNotes {
  id        Int      @id @default(autoincrement())
  userId    Int
  noteTitle String   @db.VarChar(50)
  text      String   @db.VarChar(1000)
  createdAt DateTime @default(now()) @db.Timestamp(6)
  users     users    @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model users {
  id          Int           @id @default(autoincrement())
  email       String        @unique
  password    String
  createdAt   DateTime      @default(now()) @db.Timestamp(6)
  cards       cards[]
  credentials credentials[]
  safeNotes   safeNotes[]
  wifi        wifi[]
}

model wifi {
  id        Int      @id @default(autoincrement())
  userId    Int
  wifiTitle String   @db.VarChar(50)
  name      String
  createdAt DateTime @default(now()) @db.Timestamp(6)
  users     users    @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
